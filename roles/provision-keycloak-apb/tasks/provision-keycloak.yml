---
- name: "Set Keycloak URI when not defined"
  include_role:
    name: set-keycloak-uri
  when: (not apb_keycloak_uri is defined) OR (apb_keycloak_uri == "")

- name: "Set Keycloak URI from user defined variable"
  set_fact:
    keycloak_uri: "{{ apb_keycloak_uri }}"
  when:
    - apb_keycloak_uri is defined
    - apb_keycloak_uri != ""

- name: Get namespace info
  k8s_v1_namespace:
    name: "{{ namespace }}"
  register: project

- name: Get project name
  set_fact:
    project_name: '{{project.namespace.metadata.annotations["openshift.io/display-name"]}}'

- name: Set Realm name to {{ namespace }}
  set_fact:
    realm_name: "{{ namespace }}"

- name: Generate keycloak auth token
  uri:
    url: "{{ keycloak_uri }}/auth/realms/master/protocol/openid-connect/token"
    method: POST
    body: "client_id=admin-cli&username={{ admin_username }}&password={{ admin_password }}&grant_type=password"
    validate_certs: no
  register: keycloak_auth_response
  until: keycloak_auth_response.status == 200
  retries: 5
  delay: 2

- name: Generate namespace specific realm
  template:
    src: namespace_realm.json.j2
    dest: /tmp/keycloak/namespace_realm.json

- name: "Create {{ realm_name }} realm"
  uri:
    url: "{{ keycloak_uri }}/auth/admin/realms"
    method: POST
    body: "{{ lookup('file','/tmp/keycloak/namespace_realm.json') }}"
    validate_certs: no
    body_format: json
    headers:
      Authorization: "bearer {{ keycloak_auth_response.json.access_token }}"
    status_code: 201
